services:
  postgres-primary:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${PRIMARY_CONTAINER_NAME}
    hostname: ${PRIMARY_HOSTNAME}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - primary_data:/var/lib/postgresql/data
      - ./postgres_scripts/primary:/docker-entrypoint-initdb.d
      - ./backups:/backups
    networks:
      - postgres-net
    ports:
      - "${PRIMARY_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c listen_addresses='*'
      -c wal_level=replica
      -c max_wal_senders=10
      -c wal_keep_size=64
      -c archive_mode=on
      -c archive_command='test ! -f /var/lib/postgresql/archives/%f && cp %p /var/lib/postgresql/archives/%f'
      -c hot_standby=on
      -c max_connections=100

  postgres-standby:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${STANDBY_CONTAINER_NAME}
    hostname: ${STANDBY_HOSTNAME}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - standby_data:/var/lib/postgresql/data
      - ./postgres_scripts/replica/entrypoint.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh
    command: ["standby"]
    networks:
      - postgres-net
    ports:
      - "${STANDBY_PORT}:5432"
    depends_on:
      postgres-primary:
        condition: service_healthy

  postgres-replica-readonly:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${REPLICA_CONTAINER_NAME}
    hostname: ${REPLICA_HOSTNAME}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - replica_data:/var/lib/postgresql/data
      - ./postgres_scripts/replica/entrypoint.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh
    command: ["replica"]
    networks:
      - postgres-net
    ports:
      - "${REPLICA_PORT}:5432"
    depends_on:
      postgres-primary:
        condition: service_healthy

volumes:
  primary_data:
  standby_data:
  replica_data:

networks:
  postgres-net:
    driver: bridge